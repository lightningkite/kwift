package com.lightningkite.khrysalis.generic

import com.lightningkite.khrysalis.replacements.Import

abstract class FileEmitter(val body: StringBuilder = StringBuilder()): Appendable by body {
    companion object {
        val overwriteWarning = "// Generated by Khrysalis - this file will be overwritten."
    }
    abstract fun addImport(import: Import)
    var fileEndingActions = ArrayList<() -> Unit>()
    abstract fun renderImports(to: Appendable)
    abstract fun sub(): FileEmitter
    fun render(out: Appendable) {
        out.appendLine(overwriteWarning)
        renderImports(out)
        out.append(body)
        while (fileEndingActions.isNotEmpty()) {
            val copy = fileEndingActions
            fileEndingActions = ArrayList()
            copy.forEach { it() }
        }
    }

    override fun toString(): String = buildString { render(this) }
}